name: Deploy to EC2

on:
  workflow_call:
    inputs:
      environment-name:
        required: true
        type: string
      app-directory:
        required: true
        type: string
      pm2-app-name:
        required: true
        type: string
    secrets:
      ENV_FILE_CONTENTS:
        required: true
      EC2_HOST:
        required: true
      EC2_USER:
        required: true
      EC2_SSH_KEY:
        required: true
      AWS_ROLE_TO_ASSUME_ARN:
        required: true
      AWS_REGION:
        required: true

jobs:
  # -------------------------
  # Job: Deploy to EC2
  # -------------------------
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: deployment-package
          path: deploy-package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Transfer deploy files to EC2
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "deploy-package/"
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          TARGET: /home/ec2-user/my-ts-app
          ARGS: "-rltgoDzv --delete"

      - name: Deploy and Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e # Exit immediately if a command exits with a non-zero status

            PM2_APP_NAME=${{ inputs.pm2-app-name }}
            APP_DIR=${{ inputs.app-directory }}
            echo "Deploying to $APP_DIR..."
            
            mkdir -p $APP_DIR
            rsync -av --delete /home/ec2-user/my-ts-app/ $APP_DIR/

            cd $APP_DIR

            echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env

            npm install --omit=dev --no-audit --no-fund

            npx knex migrate:latest

            pm2 restart $PM2_APP_NAME || pm2 start dist/app.js --name "$PM2_APP_NAME"
